Discussion points
-----------------

* The server has shown some significant weaknesses with memory leak, 
  it allocates allmost all available memory, and this has led to at least
  one crash. This is possibly caused by delayed_job and/or its dependencies
  such as 'daemons' gem. The problem was first observed short after these had
  been deployed. The problem does not appear in development environment, so 
  it could be due to caching, although most caching is now turned off, 
  (I believe). 

Big Items
---------
* Calculate protein_counts
    - Still interaction with db that consumes time
    - May be possible to use the import gem even more extensively

    - Evaluate consumes almost as much time as calculate with
    - the new sample dataset.

* "Main table" GUI
    - Sort on hierarchy (I think we mixed this up with the profiles)

Things to fix
-------------
* Controller error gives full error page... like in development mode

* Can remove wgs attribute from taxon with a migration

* Can remove obs_as_genome attribute from protein_counts

* Inclusion Criteria is not implemented, it is just bypassed to get to
  hmm_score_criteria

* unauthorized users should still have the right to visit protein_counts statistic pages

* Routing error looks bad.

* NoMethodError in Protein_counts#by_rank when there is no pfitmap_release calculated
   - <h2>Taxon rank: <%=@taxon_rank ? @taxon_rank : "All" %>, pfitmap_release: <%= @pfitmap_release.release %></h2>

	
* From pfitmap_release show, link from a row to the not_included db_sequences
  from there, make it possible to include a db_sequence, previously not included
  the first task needs a custom controller method and route for db_sequences

* Redo Calculate-functionality from "wgs" to "organism group"
    - Before pressing "Calculate", should be able to choose organism group
    - WGS is a database column? (Use "leaf" instead?)
    - organism-group representation in the protein-count table.
    - protein_count_for(taxon,protein) is used in protein_count_init_or_add

* Test views from a not signed-in perspective:
  - protein statistics is not available.
  
  - Restrict what views are showing un-authorized users:
  	x Button for deleting profile on show page
	x create new hmm profile on hmm_profiles index
	x add new source on sequence sources index
	x edit on sequence source show
	x destroy on hmm_results index (also bad design)
	x delete on hmm_results show
	x edit on hmm_result_rows show
	x db_sequences index
	x db_sequence show
	x hmm_db_hits index
	x hmm_db_hits show
	x hmm score criteria index + show
	x enzymes index 
	x pfitmap_releases index
	x pfitmap_release show
	

* Set up system to enable links from accession numbers to target database. See
  doc/pfitmap.dia (SequenceDatabase model). The accession_url should contain
  Ruby string interpolations like #{field_name} to allow dynamic construction of
  urls. (I just refrained from coupling this model with the SequenceSource
  model; wouldn't simplify anything.)

* Sorting the children in hmm_profiles/index.html.erb by hierarchy didn't work
  -- fix.

* Replace only HMMProfile.name on its own in lists with HMMProfile.description
  (which includes the protein name).

* When AJAX expandable table/list is implemented for the ProteinCount, 
  use it for the pfitmap_release show page as well. May solve the 
  current performance problem.

* Enable sorting on columns as a default feature for all tables.

* Test visual performance in all major browsers

* Search function for hmm_db_hits/db_sequences

* Add file_name to hmm_results so that it's easier to debug if the wrong 
  file has been uploaded.

* Add possibility to 'remove as current' for pfitmap releases

* Sequence source show page does not have a good overview
  of which proteins that have results registered, when there are many 
  hmm_profiles.

* Set smtp-settings for action mailer. Delayed job does not operate currently
  on server since smtp-settings are not fixed for action mailer. Action mailer 
  is disabled in order to execute calculation for the release.

* Ajax loading of the pfitmap_release show

* Model for displayed ranks

* Link from pfitmap_releases/n to individual profile pages. Consider only best hits?

* Add HMMDBHit.database link to counts table.

* Subset ranks in GUI

* There's an array in protein_counts_controller that specifies which proteins to show -- fix.

* On Enzymes form, indent the profiles, so easier to choose

* Tests that are not yet implemented:
  - protein_counts_by_rank view
  - protein_counts_by_hierarchy view

* If protein is missing, cripples the with_enzyme protein_count table.
     - The protein exists but it gets no protein_counts because of 
     - the missing hmm_score_criterion.
     - Low priority, only occurs if data entered by developer is missing
PfitmapRelease.calculate_main
-----------------------------

p0. Implement model unit test

1. Handle timeouts in current implementation

2. Handle different sequence databases

3. Look at nested loop implementation 


DONE
----
* Route to "With Enzymes" gives error if no release in session

*Heatmap:
 -  Toggle heatmap rows instead of only adding

* Only include taxonomic classes: superkingdom, phylum, class, order, family, genus, species.

* "Integration" tests for calculate

* nested loop implementation

* Explanation of how the calculate-method works

* Factories with associations does not work

* Check that there are no "loose branches" in the taxon tree, aka that the only node
  without parent is "root".

* Enzyme controller update does not work


Tests:
  - Hierarchy of taxon


